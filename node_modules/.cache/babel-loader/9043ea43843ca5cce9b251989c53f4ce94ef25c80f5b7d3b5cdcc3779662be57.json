{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useReducer, useCallback } from \"react\";\nconst initialState = {\n  loading: false,\n  error: null,\n  data: null,\n  extra: null,\n  identifier: null\n};\nconst httpReducer = (curHttpState, action) => {\n  switch (action.type) {\n    case \"SEND\":\n      return {\n        loading: true,\n        error: null,\n        data: null,\n        extra: null,\n        identifier: action.identifier\n      };\n    case \"RESPONSE\":\n      return {\n        ...curHttpState,\n        loading: false,\n        data: action.responseData,\n        extra: action.extra\n      };\n    case \"ERROR\":\n      return {\n        loading: false,\n        error: action.errorMessage\n      };\n    case \"CLEAR\":\n      return initialState;\n    default:\n      throw new Error(\"Should not be reached!\");\n  }\n};\nconst useHttp = () => {\n  _s();\n  const [httpState, dispatchHttp] = useReducer(httpReducer, {\n    loading: false,\n    error: null,\n    data: null,\n    extra: null,\n    identifier: null\n  });\n  const sendRequest = useCallback((url, method, body, reqExtra, reqIdentifier) => {\n    dispatchHttp({\n      type: \"SEND\",\n      identifier: reqIdentifier\n    });\n    fetch(url, {\n      method: method,\n      body: body,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      return response.json();\n    }).then(responseData => {\n      dispatchHttp({\n        type: \"RESPONSE\",\n        responseData: responseData,\n        extra: reqExtra\n      });\n    }).catch(error => {\n      dispatchHttp({\n        type: \"ERROR\",\n        errorMessage: \"Something went wrong!\"\n      });\n    });\n  }, []);\n  return {\n    isLoading: httpState.loading,\n    data: httpState.data,\n    error: httpState.error,\n    sendRequest: sendRequest,\n    reqExtra: httpState.extra,\n    reqIdentifier: httpState.identifier\n  };\n};\n_s(useHttp, \"VaD36l7zgid2uP7/2tuprvNbKIk=\");\nexport default useHttp;","map":{"version":3,"names":["useReducer","useCallback","initialState","loading","error","data","extra","identifier","httpReducer","curHttpState","action","type","responseData","errorMessage","Error","useHttp","_s","httpState","dispatchHttp","sendRequest","url","method","body","reqExtra","reqIdentifier","fetch","headers","then","response","json","catch","isLoading"],"sources":["/home/ani/Desktop/React course/react-hooks/src/hooks/http.js"],"sourcesContent":["import { useReducer, useCallback } from \"react\";\n\nconst initialState = {\n  loading: false,\n    error: null,\n    data: null,\n    extra: null,\n    identifier: null\n};\n\nconst httpReducer = (curHttpState, action) => {\n  switch (action.type) {\n    case \"SEND\":\n      return {\n        loading: true,\n        error: null,\n        data: null,\n        extra: null,\n        identifier: action.identifier,\n      };\n    case \"RESPONSE\":\n      return {\n        ...curHttpState,\n        loading: false,\n        data: action.responseData,\n        extra: action.extra,\n      };\n    case \"ERROR\":\n      return { loading: false, error: action.errorMessage };\n    case \"CLEAR\":\n      return initialState;\n    default:\n      throw new Error(\"Should not be reached!\");\n  }\n};\n\nconst useHttp = () => {\n  const [httpState, dispatchHttp] = useReducer(httpReducer, {\n    loading: false,\n    error: null,\n    data: null,\n    extra: null,\n    identifier: null,\n  });\n\n  const sendRequest = useCallback(\n    (url, method, body, reqExtra, reqIdentifier) => {\n      dispatchHttp({ type: \"SEND\", identifier: reqIdentifier });\n      fetch(url, {\n        method: method,\n        body: body,\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n        .then((response) => {\n          return response.json();\n        })\n        .then((responseData) => {\n          dispatchHttp({\n            type: \"RESPONSE\",\n            responseData: responseData,\n            extra: reqExtra,\n          });\n        })\n        .catch((error) => {\n          dispatchHttp({\n            type: \"ERROR\",\n            errorMessage: \"Something went wrong!\",\n          });\n        });\n    },\n    []\n  );\n  return {\n    isLoading: httpState.loading,\n    data: httpState.data,\n    error: httpState.error,\n    sendRequest: sendRequest,\n    reqExtra: httpState.extra,\n    reqIdentifier: httpState.identifier\n  };\n};\n\nexport default useHttp;\n"],"mappings":";AAAA,SAASA,UAAU,EAAEC,WAAW,QAAQ,OAAO;AAE/C,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,KAAK;EACZC,KAAK,EAAE,IAAI;EACXC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE,IAAI;EACXC,UAAU,EAAE;AAChB,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,YAAY,EAAEC,MAAM,KAAK;EAC5C,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,MAAM;MACT,OAAO;QACLR,OAAO,EAAE,IAAI;QACbC,KAAK,EAAE,IAAI;QACXC,IAAI,EAAE,IAAI;QACVC,KAAK,EAAE,IAAI;QACXC,UAAU,EAAEG,MAAM,CAACH;MACrB,CAAC;IACH,KAAK,UAAU;MACb,OAAO;QACL,GAAGE,YAAY;QACfN,OAAO,EAAE,KAAK;QACdE,IAAI,EAAEK,MAAM,CAACE,YAAY;QACzBN,KAAK,EAAEI,MAAM,CAACJ;MAChB,CAAC;IACH,KAAK,OAAO;MACV,OAAO;QAAEH,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAEM,MAAM,CAACG;MAAa,CAAC;IACvD,KAAK,OAAO;MACV,OAAOX,YAAY;IACrB;MACE,MAAM,IAAIY,KAAK,CAAC,wBAAwB,CAAC;EAC7C;AACF,CAAC;AAED,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGlB,UAAU,CAACQ,WAAW,EAAE;IACxDL,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE,IAAI;IACXC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE,IAAI;IACXC,UAAU,EAAE;EACd,CAAC,CAAC;EAEF,MAAMY,WAAW,GAAGlB,WAAW,CAC7B,CAACmB,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,aAAa,KAAK;IAC9CN,YAAY,CAAC;MAAEP,IAAI,EAAE,MAAM;MAAEJ,UAAU,EAAEiB;IAAc,CAAC,CAAC;IACzDC,KAAK,CAACL,GAAG,EAAE;MACTC,MAAM,EAAEA,MAAM;MACdC,IAAI,EAAEA,IAAI;MACVI,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAChD,CAAC,CAAC,CACCC,IAAI,CAAEC,QAAQ,IAAK;MAClB,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDF,IAAI,CAAEf,YAAY,IAAK;MACtBM,YAAY,CAAC;QACXP,IAAI,EAAE,UAAU;QAChBC,YAAY,EAAEA,YAAY;QAC1BN,KAAK,EAAEiB;MACT,CAAC,CAAC;IACJ,CAAC,CAAC,CACDO,KAAK,CAAE1B,KAAK,IAAK;MAChBc,YAAY,CAAC;QACXP,IAAI,EAAE,OAAO;QACbE,YAAY,EAAE;MAChB,CAAC,CAAC;IACJ,CAAC,CAAC;EACN,CAAC,EACD,EACF,CAAC;EACD,OAAO;IACLkB,SAAS,EAAEd,SAAS,CAACd,OAAO;IAC5BE,IAAI,EAAEY,SAAS,CAACZ,IAAI;IACpBD,KAAK,EAAEa,SAAS,CAACb,KAAK;IACtBe,WAAW,EAAEA,WAAW;IACxBI,QAAQ,EAAEN,SAAS,CAACX,KAAK;IACzBkB,aAAa,EAAEP,SAAS,CAACV;EAC3B,CAAC;AACH,CAAC;AAACS,EAAA,CA5CID,OAAO;AA8Cb,eAAeA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}